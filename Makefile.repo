# -*- mode: makefile; -*-
MMLMIZALL=$(shell ls mml/*.miz)
MMLMIZSTD=$(filter-out mml/hidden.miz, $(MMLMIZALL))
MMLLAR=$(patsubst mml/%.miz, %, $(MMLMIZSTD))
# MMLLAR=$(shell cat $(MIZFILES)/mml.lar) tarski
DEP-MAKEFILES = $(patsubst %, mml/%.dep, $(MMLLAR))
MIZ = $(patsubst %, %.miz, $(MMLLAR))
HDRS = $(patsubst %, %.hdr, $(MMLLAR))
FDEPS = $(patsubst %, %.fdeps, $(MMLLAR))
PRELS = $(patsubst %, %-prel, $(MMLLAR))
VPATH = mml
export SHELL=/bin/bash
ECHO = /bin/echo
WIKIHOST=mws.cs.ru.nl
GITPROJECT=mw1.git

# .PHONY is a bad bad thing, it remakes the target all over; don't use this
#.PHONY: deps
#.PHONY: $(patsubst %, %-dep, $(MMLLAR))

# At some point we should be smarter about padding the "make tags",
#i.e., the string like "VERIFY", "PREL", "ABSREFS", etc., rather than
#simply hard-coding
#
#pad := $(1)
#
#verify-tag := $(call pad,"VERIFY")
#
# But it's a very small number of constant strings to maintain.

verify-tag = "    VRF "
hdr-tag    = "    HDR "
prel-tag   = "    PRL "
absref-tag = "    ABS "
html-tag   = "    HTM "

hdrs: $(HDRS)
%.hdr: %.miz
	@$(ECHO) $(hdr-tag) $*
	@.perl/mkxmlhead.pl -s mml/$*.miz > mml/$*.hdr



xmlvrfs: $(patsubst %, %.xmlvrf, $(MMLLAR))
%.xmlvrf: %.miz
	@$(ECHO) $(verify-tag) $*
	@makeenv mml/$*.miz > /dev/null 2> /dev/null;
	@if [ "$*" == "tarski" ]; then \
		verifier -a -q -l mml/$*.miz > /dev/null 2>/dev/null; \
	else \
		verifier -q -l mml/$*.miz > /dev/null 2>/dev/null; \
	fi;
	@mv mml/$*.xml mml/$*.xmlvrf


# fine dependencies on schemes and theorems
# they are reproduced when prels are

fdeps: $(FDEPS)
%.fdeps: %.xmlvrf
	@perl -e 'use lib ".perl"; use mizar; mizar::PrintFDeps(shift);' mml/$* > mml/$*.fdeps

# #TODO: we should not be touching foo-prel when nothing got changed -
#        use the MD5/SHA1 testing?
prels: $(PRELS)
%-prel: %.xmlvrf %.fdeps
	@$(ECHO) $(prel-tag) $*
	@exporter -q -l mml/$*.miz > /dev/null 2>/dev/null
	@transfer mml/$*.miz > /dev/null 2>/dev/null
	@for ext in dno dcl dco def did the sch; do \
		if test -f "mml/$*.$$ext"; then \
			rm -f "mml/$*.$$ext"; \
		fi \
	done
	@touch mml/$*-prel
	@mv mml/$*.xml mml/$*.xmlexp

# HIDDEN is a special case. It depends on nothing, so we can
# unconditionally timestamp it.
hidden-prel:
	@$(ECHO) $(prel-tag) "hidden"
	@touch mml/hidden-prel

absrefs: $(patsubst %, %-absrefs.xml, $(MMLLAR))

%-absrefs.xml: %.xmlvrf
	@$(ECHO) $(absref-tag) $*
	@xsltproc \
	  --param explainbyfrom 0 \
	  --output mml/$*-absrefs.xml \
	  xsl/addabsrefs.xsl mml/$*.xmlvrf

htmls: $(patsubst %, %.html, $(MMLLAR))
	.perl/mkmmlindex.pl -ghttp://$(WIKIHOST):1234/ -mhttp://$(WIKIHOST)/cgi-bin/mwiki/mwiki.cgi -p$(GITPROJECT) mml/*.hdr > html/00INDEX.html

%.html: %-absrefs.xml %.hdr
	@$(ECHO) $(html-tag) $*
	@xsltproc \
	  --param mk_header 1 \
	  --param default_target \'_self\'  \
	  --param linking \'l\' \
	  --param mizhtml \'\' \
	  --param selfext \'html\' \
	  --param titles 1 \
	  --param colored 1 \
	  --param proof_links 1 \
	  --param ajax_proofs 1 \
	  --param ajax_proof_dir \'proofs\' \
	  --param wiki_links 1 \
	  --param wiki_sections 1 \
	  --param lwikihost \'$(WIKIHOST)\' \
	  --param lgitproject \'$(GITPROJECT)\' \
	  --output html/$*.html \
	  xsl/miz.xsl mml/$*-absrefs.xml
	@touch mml/$*.html

# this doesn't work: mmllar is not topologically sorted here
# fine dependency magic - just touch it all in MMLLAR order
# do we need to touch .evl and .dep? - yes, they depend on the changed .miz
# and would be re-done next time

# The chain of extensions as produced by make. The order matters here!
MAKEEXTS=.evl .dep .hdr .xmlvrf .fdeps -prel -absrefs.xml .html

touch-dependencies:
	@for i in $(shell cat mml/deps); do \
	  for j in $(MAKEEXTS); do touch mml/$$i$$j; done; \
	done

# only include the deps if we do not do sections
ifndef MW_SECTION
-include $(DEP-MAKEFILES)
endif
