#!/usr/bin/perl -w

use strict;
use warnings;
use File::Temp qw/ tempfile tempdir /;
use Cwd;

# Compute list of mizar files that belong to the index (i.e., the
# mizar files that are about to be committed).  git diff-index will
# give a list of changed files.  The actual file name is the second
# field of the line (where the field separator is tab), hence the
# first call to "cut -f 2".  The second cut gets rid of the initial
# "mml/" in filenames like "mml/polyform.miz".  The last cut gives us
# "polyform" from "polyform.miz".

my @changed = `git diff-index HEAD | cut -f 2 | grep '\.miz\$' | cut -d '/' -f 2 | cut -d '.' -f 1`;

my $mizfiles = "/home/mizarw/mwiki";

my $tempdir = tempdir (CLEANUP => 0);
my $currdir = getcwd ();
my $num_changed = scalar (@changed);
print ("It looks like I have $num_changed to look at\n");

print ("Copying all these to $tempdir\n");

foreach (@changed) {
  chomp;
  system ("cp", "$currdir/mml/$_.miz", "$tempdir");
}
print ("copying done.\n");

print ("Verifying modified mizar files...\n");

my @killers = ();
foreach (@changed) {
  chomp;
  chdir ($tempdir) 
    or die ("While attempting to verify $_, I was somehow unable to change to the temporary directory $tempdir!");
  my $verifier = "/home/mizarw/mwiki/bin/verifier";
  print ("about to run $verifier $tempdir/$_.miz");
  system ("$verifier $_.miz 2>&1 > $tempdir/$_.errvrf");
  my $exit_status = ($? >> 8);
  unless ($exit_status == 0) {
    print ("Hmm, verifier seems to have died while verifying your text.\n");
    print ("The exit status was $exit_status\n");
    print ("You're not nice.\n");
    # keep track of the killers
    push (@killers, $_);
  }
  chdir ($currdir) 
    or die ("How odd: I just verified $_.miz in temporary directory $tempdir, but I'm unable to go back to the original directory $currdir!");
}

print ("I tried to verify your changes.  Let's see whether that worked out.\n");

my $killer_len = scalar (@killers);
if ($killer_len == 0) {
  print ("Thankfully, no mizar text killed the verifier.\n");
} else {
  print ("Amazingly, at least one of the given mizar texts killed the verifier!\n");
  print ("The kellers are:");
  foreach (@killers) {
    print ("$_\n");
  }
  print ("There must be something really wrong with these articles.\n");
}

my @bad_guys = ();
foreach (@changed) {
  chomp;
  print ("Investigating $_.miz...\n");
  my $err_file = "$tempdir/$_.err";
  if (-e $err_file) {
    if (-s $err_file > 0) {
      print ("Hmm, $err_file exists and is non-empty.  That's bad, right?\n");
      push (@bad_guys, $_);
    } else {
      print ("The error file $err_file exists, but it's empty.  Yay.\n");
    }
  } else {
    print ("$_.err doesn't exist.  Good or bad?  You decide.\n");
  }
}

print ("If you like, check out $tempdir to see the generated auxiliary files\n");

my $bad_length = scalar (@bad_guys);
if ($bad_length == 0) {
  exit 0;
} else {
  print ("Sorry, there were some problems with the texts that you intended to commit.\n");
  print ("I won't let you proceed.\n");
  exit 1;
}
